# values.yaml
namespace:
  name: growthbook
  quota:
    requests:
      cpu: "2"
      memory: 4Gi
    limits:
      cpu: "4"
      memory: 8Gi
    pods: "10"
    services: "5"
    persistentvolumeclaims: "5"
    configmaps: "10"
    secrets: "10"
    replicationcontrollers: "5"
    resourcequotas: "1"
  limits:
    cpu: "2"
    memory: 2Gi
    minCPU: 100m
    minMemory: 128Mi


mongodb:
  enabled: true
  auth:
    rootUser: root
    rootPassword: password
  persistence:
    enabled: true
    size: 20Gi
    storageClass: "-"
    accessMode: "ReadWriteOnce"
  resources:
    enabled: true
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 2048Mi

growthbook:
  annotations:
    meta.helm.sh/release-name: "growthbook"
    meta.helm.sh/release-namespace: "growthbook"
  replicaCount: 1
  image:
    repository: growthbook/growthbook
    tag: latest
    pullPolicy: IfNotPresent
    imagePullSecrets:
      # - name: some-pull-secret
  service:
    type: ClusterIP
    ports:
      - name: http
        port: 3000
      - name: api
        port: 3100
  env:
    MONGODB_URI: "mongodb://root:password@growthbook-mongodb:27017/growthbook?authSource=admin"
    APP_ORIGIN: "https://growthbook-origin.example.com:443"
    API_HOST: "https://growthbook-api.example.com:443"
    JWT_SECRET: "JWTSecret@GrowthBook"
    ENCRYPTION_KEY: "EncryptionKey@GrowthBook"
    NODE_ENV: "production"
  persistence:
    enabled: true
    size: 8Gi
    storageClass: "-"
    accessMode: "ReadWriteOnce"
  resources:
    enabled: true
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 1024Mi
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
    
serviceAccount:
  create: true
  name: growthbook-service-account
  annotations: {}

ingress:
  enabled: true
  className: ""
  annotations:
    kubernetes.io/ingress.class: nginx
    # cert-manager.io/cluster-issuer: letsencrypt
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    # nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    # Specify your app-origin with 'https://' prefix to ensure proper CORS configuration and secure communication
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://growthbook-origin.example.com, https://growthbook-api.example.com"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Authorization,Referer,sec-ch-ua,sec-ch-ua-mobile,sec-ch-ua-platform,User-Agent,X-Organization,Content-Type"
  # Specify your app-origin and api-host without 'https://' prefix because these values are used in the ingress configuration and should not include the protocol.
  appOriginName: growthbook-origin.example.com
  apiHostName: growthbook-api.example.com
  hosts:
    - host: growthbook-origin.example.com
      paths:
        - path: /
          pathType: Prefix
          service:
            name: growthbook
            port:
              number: 3000
    - host: growthbook-api.example.com
      paths:
        - path: /
          pathType: Prefix
          service:
            name: growthbook
            port:
              number: 3100
  tls:
    - secretName: backend-tls
      hosts:
        - growthbook-api.example.com
    - secretName: frontend-tls
      hosts:
        - growthbook-origin.example.com